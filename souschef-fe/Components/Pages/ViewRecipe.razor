@page "/recipe/{RecipeId:long}"
@using souschef_core.Model.DTO
@using souschef_core.Model
@using souschef_core.Services
@using souschef_fe.Services

@inject ClientRecipeService RecService

@inject ICrudSvc<User> UserService


@if (getRec == null || _user == null)
{
<p>Loading recipe details...</p>
}
else
{
    <h3 style="text-align: center">@getRec.Name</h3>
    
    <p style="text-align: center">@_user.DisplayName</p>
    
    <p style="text-align: center">@getRec.Description</p>

    <p style="text-align: center">[ @string.Join(", ", getRec.Tags.Select(tag => tag.TagName)) ]</p>
    
    <br/>
    
    @* @foreach (var ri in getRec.Ingredients.ToArray()) *@
    @* { *@
    @*     <p style="text-align: center">@ri.IngrName</p> *@
    @* } *@
    
    <br/>
    
    <p style="text-align: center">@getRec.Directions</p>
    
    
    
    
}


@code {
    [Parameter] public long RecipeId { get; set; }

    private HumanReadableRecipe getRec;

    private User _user;

    protected override async Task OnInitializedAsync()
    {
        getRec = await RecService.GetAsync(RecipeId);
        _user = await UserService.GetAsync(getRec.AuthorId.GetValueOrDefault());
    }
    
}