@page "/tags"
@rendermode InteractiveServer
@using souschef_fe.Services
@inject ICrudSvc<Tag> TagService
@* @inject ILogger<ClientMessageService> Logger *@

@using souschef_core.Model
@using souschef_core.Services

@* <h3 style="text-align: center">Tags</h3> *@

<h3 style="text-align: center;">Tag: @_tag.TagName</h3>



<div class="d-flex justify-content-center">
    <!-- First Card -->
    <div class="card me-3" style="width: 18rem;">
        <div class="card-body">
            <h5 class="card-title">Get or Delete</h5>
            <p class="card-text">
                <EditForm Model="@GetDelTag">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="mb-3">
                        <label for="integerInput" class="form-label">ID:</label>
                        <InputNumber id="integerInput" @bind-Value="GetDelTag.TagId" class="form-control" />
                    </div>

                    <button type="submit" class="btn btn-primary" @onclick="HandleGetTag">Get</button>
                    <button type="submit" class="btn btn-danger" @onclick="HandleDeleteTag">Delete</button>
                </EditForm>
            </p>
        </div>
    </div>

    <!-- Second Card -->
    <div class="card" style="width: 18rem;">
        <div class="card-body">
            <h5 class="card-title">Create or Update</h5>
            <p class="card-text">
                <EditForm Model="@ChangeTag">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="mb-3">
                        <label for="integerInput" class="form-label">ID:</label>
                        <InputNumber id="integerInput" @bind-Value="@ChangeTag.TagId" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label for="tagName" class="form-label">Name:</label>
                        <InputText id="tagName" class="form-control" @bind-Value="@ChangeTag.TagName"/>
                    </div>

                    <button type="submit" class="btn btn-primary" @onclick="HandleCreateTag">Create</button>
                    <button type="submit" class="btn btn-danger" @onclick="HandleUpdateTag">Update</button>
                </EditForm>
            </p>
        </div>
    </div>
</div>

<div>
    <h3>All Tags</h3>
    <ul>
        @if (_tagslist is not null && _tagslist.Any())
        {
        foreach (var tag in _tagslist)
        {
        <li>@tag.TagName</li>
        }
        }
        else
        {
        <li>No tags found.</li>
        }
    </ul>
</div>


@code {

    [Parameter] public Tag GetDelTag { get; set; } = new();
    [Parameter] public Tag ChangeTag { get; set; } = new();

    Tag _tag = new Tag();
    
    private List<Tag>? _tagslist;
    
    protected override async Task OnInitializedAsync()
    {
        _tagslist = await TagService.GetAllAsync();
    }

    private async Task HandleGetTag()
    {
        _tag = await TagService.GetAsync(GetDelTag.TagId);
    }

    private async Task HandleDeleteTag()
    {
        await TagService.DeleteAsync(GetDelTag.TagId);
    }

    private async Task HandleCreateTag()
    {
        ChangeTag.TagId = 0;
        await TagService.AddAsync(ChangeTag);
    }

    private async Task HandleUpdateTag()
    {
        await TagService.UpdateAsync(ChangeTag, ChangeTag.TagId);
    }
    

}