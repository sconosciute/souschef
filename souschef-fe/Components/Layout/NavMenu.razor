@using souschef_core.Model.DTO
@using souschef_fe.Services
@inject ILocalStorageService LocalStore;

<div class="navbar navbar-expand-lg navbar-dark bg-primary">
    <div class="container-fluid">
        <a class="navbar-brand" href="">souschef-fe</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <NavLink class="nav-link text-white" href="" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill" aria-hidden="true"></span> Home
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link text-white" href="search">
                        <span class="bi bi-list-nested" aria-hidden="true"></span> Search
                    </NavLink>
                </li>

                @if (_loggedIn)
                {
                    <li class="nav-item">
                        <NavLink class="nav-link text-white" href="logout">
                            <span class="bi bi-list-nested" aria-hidden="true"></span> Log out
                        </NavLink>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <NavLink class="nav-link text-white" href="login">
                            <span class="bi bi-list-nested" aria-hidden="true"></span> Log in
                        </NavLink>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>

@code
{
    private bool _loggedIn = false;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _loggedIn = (await LocalStore.GetItem<AuthResponse>("user")) is not null;
    }
}
